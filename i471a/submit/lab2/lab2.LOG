Script started on 2021-03-04 10:53:09-05:00 [TERM="xterm" TTY="/dev/pts/12" COLUMNS="100" LINES="35"]
thur1@remote01:~/cs471/i471a/projects/cs471/labs/lab2$ racket[4Plsracket
Welcome to Racket v7.9 [bc].
> (expt 3 4)> ([1@(e> ([1@*(> (*[1@ ((expt 3 4)4))> (*[1@3 
; *3: undefined;
;  cannot reference an identifier before its definition
;   in module: top-level
; [,bt for context]
> > (*3 (expt 3 4))> (*[1@ 3
243
> > (* 3 (expt 3 4)) (expt 3 4))* 3 (expt 3 4)) - [21G[20G[K(- 2 ( [26G4 [27G[26G[Kexpt 4 2 [34G)))
243
-14
; readline-input:3:33: read-syntax: unexpected `)` [,bt for context]
> > (* 3 (expt 3 4)) (- 2 (expt 4 2)))[36G[K
243
-14
> > (* 3 (expt 3 4)) (- 2 (expt 4 2))-[21G[P [21G[1@* [21G[1@(*[21G[1@ ([22G[1@-([23G[1@ ((* 2 (expt 4 2)))
243
-32
> > (* 3 (expt 3 4)) ( - (* 2 (expt 4 2)))[21G[P-
243
-32
> > (* 3 (expt 3 4)) (- (* 2 (expt 4 2)))- [22G[P([21G[P([21G[P*(* 2 (expt 4 2)))[36G[K
243
32
> > (* 3 (expt 3 4)) (* 2 (expt 4 2))> [1@_(> _[1@ (> _ [1@=(> _ [P(> _[P(> [P(> ([1@(*> ([1@ (> ( [1@-([6G[1@ ((* 3 (expt 3 4)) (* 2 (expt 4 2)))
211
> > ( - (* 3 (expt 3 4)) (* 2 (expt 4 2)))> ([1@( > ([1@ (> ([P(> ([1@ (> ( [1@+([6G[1@ (( - (* 3 (expt 3 4)) (* 2 (expt 4 2))))))[44G )) [44G))[K)[45G )[46G()[47G+)[48G )[49G()[50G )[51G4)[52G )[53G4)[55G)[56G)
; application: not a procedure;
;  expected a procedure that can be applied to arguments
;   given: 4
; [,bt for context]
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ ( 4 4)))[56G[K))
; application: not a procedure;
;  expected a procedure that can be applied to arguments
;   given: 4
; [,bt for context]
; readline-input:10:54: read-syntax: unexpected `)` [,bt for context]
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ ( 4 4))))[57G[K> ( [4P[38G)))[K
211
> > ( - (* 3 (expt 3 4)) (* 2 (expt 4 2)))> ([1@( > ([1@ (> ( [1@+([6G[1@ (( - (* 3 (expt 3 4)) (* 2 (expt 4 2))))
211
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))))[45G )[46G()[47G3)[49G)
; application: not a procedure;
;  expected a procedure that can be applied to arguments
;   given: 3
; [,bt for context]
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (3)))[49G[K[47G)[K[46G)[K[45G)[K
211
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))))t 4 2))[44G ))[45G())[46G+))[47G ))[48G4))[49G ))[50G4))[53G)
203
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2)) (+ 4 4)))[46G[P [46G[1@- 
211
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2)) (- 4 4)))
211
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2)) (- 4 4)))[50G)))[K[49G)))[K[48G)))[K[47G)))[K[46G)))[K[46G2)))[47G0)))
; application: not a procedure;
;  expected a procedure that can be applied to arguments
;   given: 20
; [,bt for context]
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2)) (20)))[46G[1@ 22
; application: not a procedure;
;  expected a procedure that can be applied to arguments
;   given: 20
; [,bt for context]
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2)) ( 20)))[48G)))[K[47G)))[K[46G)))[K[46G+)))[47G )))[48G4)))[49G )))[50G4)))
203
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2)) (+ 4 4)))[53G[K[50G))[K[49G))[K[48G))[K[47G))[K[46G))[K[45G))[K[44G))[K)[45G )[46G()[47G )[47G)[K[47G )[48G+)[48G)[K[47G)[K[47G+)[48G )[49G4)[50G )[51G4)[52G )[52G)[K[53G)
219
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ 4 4))> ([1@( > ([1@ (> ( [1@-([6G[1@ (( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ 4 4))[57G )[58G()[59G )[59G)[K[59G+)[60G )[60G)[K[59G)[K[59G+)[60G )[61G1)))
  ; user break [,bt for context]
^[[A^[[A^C; user break [,bt for context]
^[[A^[[A
  ( - ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ 4 4) (+ 1))  ( [4P[52G))[K
219
> > ( - ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ 4 4) (+ 1))
  ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ 4 4))[53G[K[52G[K[51G[K[50G[49G[K[48G[47G[K[46G[K[45G[44G[K[43G[K[42G[K[41G[K[A> ( [4P[52G))[K
[K[A[54G
219
> > ( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ 4 4))> ([1@( > ([1@ (> ( [1@+([6G[1@ (( + ( - (* 3 (expt 3 4)) (* 2 (expt 4 2))) (+ 4 4)))[58G )[59G()[60G+)[61G )[62G1)[64G)
220
> eix> ei[K> e[Kxit()
#<procedure:exit>
; readline-input:26:4: #%app: missing procedure expression;
;  probably originally (), which is an illegal empty application
;   in: (#%app)
; [,bt for context]
> (exit)
thur1@remote01:~/cs471/i471a/projects/cs471/labs/lab2$ ls
lab2.LOG  scheme1  scheme1.html  scheme1.pdf  scheme1.umt
thur1@remote01:~/cs471/i471a/projects/cs471/labs/lab2$ touch sce[Kheme.lo[K[K[K[K[K[K[K[K[Klab2.ans
thur1@remote01:~/cs471/i471a/projects/cs471/labs/lab2$ emacs lab2.ans
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[35d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[34d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) -----------------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[35d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[35;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[35;54H[?25ldone[H
[?12l[?25h[?12;25h[35;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[35;59H[?25ldone[H
[?12l[?25h[?12;25h[35;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[35;58H[?25ldone[H
[?12l[?25h[?12;25h[35;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[35;60H[?25ldone[H
[?12l[?25h[?12;25h[35;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[35;57H[?25ldone[H
[?12l[?25h[?12;25h[35;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[35;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[35;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[35;77H[?25ldone[H
[?12l[?25h[?12;25h[35;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[35;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[35;75H[?25ldone[H
[?12l[?25h[?12;25h[35;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[35;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[35;61H[?25ldone[H
[?12l[?25h[?12;25h[35;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[35;10H[?25lusr/share/emacs/site-lisp/elpa/haskel[34@l-mode-16.1/haskell-mode-autoloads[H
[?12l[?25h[?12;25h[35;96H[?25ldone[H
[?12l[?25h[?12;25h[35;10H[?25letc/emacs/site-start.d/50haskell-mode[34P[H
[?12l[?25h[?12;25h[35;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[35;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[35;75H[?25ldone[H
[?12l[?25h[?12;25h[35;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[35;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[35;64H[?25ldone[H
[?12l[?25h[?12;25h[35;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[35;54H[?25ldone[H
[?12l[?25h[?12;25h[35;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[35;65H[?25ldone[H
[?12l[?25h[?12;25h[35;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[35;54H[